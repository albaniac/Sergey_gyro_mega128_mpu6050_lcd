#include "timer.h"
#include "common_makros.h"
#include <avr/io.h>
#include <avr/interrupt.h>

//==============================================================================================

MySoftTimer g_timer;

//==============================================================================================

ISR (TIMER2_OVF_vect)
{
// cli();
  g_timer.touch_timer();
// sei();
}

//==============================================================================================

inline void setupTIMER2 (void)
{
  TIMSK &=~(1<<OCIE2 | 1<< TOIE2);  
  ASSR  = 1<<AS0;       
  TCNT2 = 0;
  //TCCR2 = 5<<CS20; // (1<<CS20 | 1<<CS21 | 1<<CS22)
  //TCCR2 = (1<<CS20 | 1<<CS21 | 1<<CS22);
  TCCR2 = 1<<CS21; // 010 = 2

  long pr = (long)(1.0 / ((1.0 / ((16000000.0 / 8.0) / 255.0)) * 1000.0)); // must be 2 then 8, but speed was in 4 times slower
  g_timer.set_my_prescaller(pr);
  
  TIMSK |= 1<< TOIE2;
  //TIMSK |= (1<< TOIE2 | 1<<OCIE2);
//  sei();
}

//==============================================================================================

void MySoftTimer::start(){
   TIMSK |= 1<< TOIE2;  
}

//==============================================================================================

void MySoftTimer::stop(){
  TIMSK &=~(1<< TOIE2);
}

//==============================================================================================

void MySoftTimer::init(){
  setupTIMER2();
}

//==============================================================================================
